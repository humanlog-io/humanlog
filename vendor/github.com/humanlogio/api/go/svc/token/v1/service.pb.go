// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: svc/token/v1/service.proto

package tokenv1

import (
	v1 "github.com/humanlogio/api/go/types/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GenerateAccountTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId int64                  `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Roles     []v1.AccountRole       `protobuf:"varint,3,rep,packed,name=roles,proto3,enum=types.v1.AccountRole" json:"roles,omitempty"`
}

func (x *GenerateAccountTokenRequest) Reset() {
	*x = GenerateAccountTokenRequest{}
	mi := &file_svc_token_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateAccountTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAccountTokenRequest) ProtoMessage() {}

func (x *GenerateAccountTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_token_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAccountTokenRequest.ProtoReflect.Descriptor instead.
func (*GenerateAccountTokenRequest) Descriptor() ([]byte, []int) {
	return file_svc_token_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *GenerateAccountTokenRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *GenerateAccountTokenRequest) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *GenerateAccountTokenRequest) GetRoles() []v1.AccountRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

type GenerateAccountTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *v1.AccountToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GenerateAccountTokenResponse) Reset() {
	*x = GenerateAccountTokenResponse{}
	mi := &file_svc_token_v1_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateAccountTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAccountTokenResponse) ProtoMessage() {}

func (x *GenerateAccountTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_token_v1_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAccountTokenResponse.ProtoReflect.Descriptor instead.
func (*GenerateAccountTokenResponse) Descriptor() ([]byte, []int) {
	return file_svc_token_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *GenerateAccountTokenResponse) GetToken() *v1.AccountToken {
	if x != nil {
		return x.Token
	}
	return nil
}

type RevokeAccountTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId int64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	TokenId   int64 `protobuf:"varint,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *RevokeAccountTokenRequest) Reset() {
	*x = RevokeAccountTokenRequest{}
	mi := &file_svc_token_v1_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeAccountTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeAccountTokenRequest) ProtoMessage() {}

func (x *RevokeAccountTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_token_v1_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeAccountTokenRequest.ProtoReflect.Descriptor instead.
func (*RevokeAccountTokenRequest) Descriptor() ([]byte, []int) {
	return file_svc_token_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *RevokeAccountTokenRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *RevokeAccountTokenRequest) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

type RevokeAccountTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeAccountTokenResponse) Reset() {
	*x = RevokeAccountTokenResponse{}
	mi := &file_svc_token_v1_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeAccountTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeAccountTokenResponse) ProtoMessage() {}

func (x *RevokeAccountTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_token_v1_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeAccountTokenResponse.ProtoReflect.Descriptor instead.
func (*RevokeAccountTokenResponse) Descriptor() ([]byte, []int) {
	return file_svc_token_v1_service_proto_rawDescGZIP(), []int{3}
}

type GetAccountTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId int64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	TokenId   int64 `protobuf:"varint,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *GetAccountTokenRequest) Reset() {
	*x = GetAccountTokenRequest{}
	mi := &file_svc_token_v1_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountTokenRequest) ProtoMessage() {}

func (x *GetAccountTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_token_v1_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountTokenRequest.ProtoReflect.Descriptor instead.
func (*GetAccountTokenRequest) Descriptor() ([]byte, []int) {
	return file_svc_token_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetAccountTokenRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *GetAccountTokenRequest) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

type GetAccountTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *v1.AccountToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetAccountTokenResponse) Reset() {
	*x = GetAccountTokenResponse{}
	mi := &file_svc_token_v1_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountTokenResponse) ProtoMessage() {}

func (x *GetAccountTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_token_v1_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountTokenResponse.ProtoReflect.Descriptor instead.
func (*GetAccountTokenResponse) Descriptor() ([]byte, []int) {
	return file_svc_token_v1_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetAccountTokenResponse) GetToken() *v1.AccountToken {
	if x != nil {
		return x.Token
	}
	return nil
}

type ListAccountTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor    *v1.Cursor `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit     int32      `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	AccountId int64      `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *ListAccountTokenRequest) Reset() {
	*x = ListAccountTokenRequest{}
	mi := &file_svc_token_v1_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountTokenRequest) ProtoMessage() {}

func (x *ListAccountTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_token_v1_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountTokenRequest.ProtoReflect.Descriptor instead.
func (*ListAccountTokenRequest) Descriptor() ([]byte, []int) {
	return file_svc_token_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListAccountTokenRequest) GetCursor() *v1.Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *ListAccountTokenRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAccountTokenRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type ListAccountTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next  *v1.Cursor                           `protobuf:"bytes,1,opt,name=next,proto3" json:"next,omitempty"`
	Items []*ListAccountTokenResponse_ListItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListAccountTokenResponse) Reset() {
	*x = ListAccountTokenResponse{}
	mi := &file_svc_token_v1_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountTokenResponse) ProtoMessage() {}

func (x *ListAccountTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_token_v1_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountTokenResponse.ProtoReflect.Descriptor instead.
func (*ListAccountTokenResponse) Descriptor() ([]byte, []int) {
	return file_svc_token_v1_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListAccountTokenResponse) GetNext() *v1.Cursor {
	if x != nil {
		return x.Next
	}
	return nil
}

func (x *ListAccountTokenResponse) GetItems() []*ListAccountTokenResponse_ListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListAccountTokenResponse_ListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *v1.AccountToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ListAccountTokenResponse_ListItem) Reset() {
	*x = ListAccountTokenResponse_ListItem{}
	mi := &file_svc_token_v1_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountTokenResponse_ListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountTokenResponse_ListItem) ProtoMessage() {}

func (x *ListAccountTokenResponse_ListItem) ProtoReflect() protoreflect.Message {
	mi := &file_svc_token_v1_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountTokenResponse_ListItem.ProtoReflect.Descriptor instead.
func (*ListAccountTokenResponse_ListItem) Descriptor() ([]byte, []int) {
	return file_svc_token_v1_service_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ListAccountTokenResponse_ListItem) GetToken() *v1.AccountToken {
	if x != nil {
		return x.Token
	}
	return nil
}

var File_svc_token_v1_service_proto protoreflect.FileDescriptor

var file_svc_token_v1_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x76, 0x63, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x76,
	0x63, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa4, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x1c, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x55, 0x0a, 0x19, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x1c, 0x0a, 0x1a,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x47,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x78, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0xc1, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24,
	0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x04,
	0x6e, 0x65, 0x78, 0x74, 0x12, 0x45, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x38, 0x0a, 0x08, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2c, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0xb1, 0x03, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6f, 0x0a, 0x14, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x29,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x76, 0x63, 0x2e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x12, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x27, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x60, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xa5, 0x01, 0x0a, 0x10, 0x63, 0x6f,
	0x6d, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x31,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x75, 0x6d, 0x61, 0x6e,
	0x6c, 0x6f, 0x67, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x76, 0x63,
	0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x53, 0x54, 0x58, 0xaa, 0x02, 0x0c, 0x53, 0x76, 0x63, 0x2e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0c, 0x53, 0x76, 0x63, 0x5c, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x18, 0x53, 0x76, 0x63, 0x5c, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x0e, 0x53, 0x76, 0x63, 0x3a, 0x3a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_svc_token_v1_service_proto_rawDescOnce sync.Once
	file_svc_token_v1_service_proto_rawDescData = file_svc_token_v1_service_proto_rawDesc
)

func file_svc_token_v1_service_proto_rawDescGZIP() []byte {
	file_svc_token_v1_service_proto_rawDescOnce.Do(func() {
		file_svc_token_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_svc_token_v1_service_proto_rawDescData)
	})
	return file_svc_token_v1_service_proto_rawDescData
}

var file_svc_token_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_svc_token_v1_service_proto_goTypes = []any{
	(*GenerateAccountTokenRequest)(nil),       // 0: svc.token.v1.GenerateAccountTokenRequest
	(*GenerateAccountTokenResponse)(nil),      // 1: svc.token.v1.GenerateAccountTokenResponse
	(*RevokeAccountTokenRequest)(nil),         // 2: svc.token.v1.RevokeAccountTokenRequest
	(*RevokeAccountTokenResponse)(nil),        // 3: svc.token.v1.RevokeAccountTokenResponse
	(*GetAccountTokenRequest)(nil),            // 4: svc.token.v1.GetAccountTokenRequest
	(*GetAccountTokenResponse)(nil),           // 5: svc.token.v1.GetAccountTokenResponse
	(*ListAccountTokenRequest)(nil),           // 6: svc.token.v1.ListAccountTokenRequest
	(*ListAccountTokenResponse)(nil),          // 7: svc.token.v1.ListAccountTokenResponse
	(*ListAccountTokenResponse_ListItem)(nil), // 8: svc.token.v1.ListAccountTokenResponse.ListItem
	(*timestamppb.Timestamp)(nil),             // 9: google.protobuf.Timestamp
	(v1.AccountRole)(0),                       // 10: types.v1.AccountRole
	(*v1.AccountToken)(nil),                   // 11: types.v1.AccountToken
	(*v1.Cursor)(nil),                         // 12: types.v1.Cursor
}
var file_svc_token_v1_service_proto_depIdxs = []int32{
	9,  // 0: svc.token.v1.GenerateAccountTokenRequest.expires_at:type_name -> google.protobuf.Timestamp
	10, // 1: svc.token.v1.GenerateAccountTokenRequest.roles:type_name -> types.v1.AccountRole
	11, // 2: svc.token.v1.GenerateAccountTokenResponse.token:type_name -> types.v1.AccountToken
	11, // 3: svc.token.v1.GetAccountTokenResponse.token:type_name -> types.v1.AccountToken
	12, // 4: svc.token.v1.ListAccountTokenRequest.cursor:type_name -> types.v1.Cursor
	12, // 5: svc.token.v1.ListAccountTokenResponse.next:type_name -> types.v1.Cursor
	8,  // 6: svc.token.v1.ListAccountTokenResponse.items:type_name -> svc.token.v1.ListAccountTokenResponse.ListItem
	11, // 7: svc.token.v1.ListAccountTokenResponse.ListItem.token:type_name -> types.v1.AccountToken
	0,  // 8: svc.token.v1.TokenService.GenerateAccountToken:input_type -> svc.token.v1.GenerateAccountTokenRequest
	2,  // 9: svc.token.v1.TokenService.RevokeAccountToken:input_type -> svc.token.v1.RevokeAccountTokenRequest
	4,  // 10: svc.token.v1.TokenService.GetAccountToken:input_type -> svc.token.v1.GetAccountTokenRequest
	6,  // 11: svc.token.v1.TokenService.ListAccountToken:input_type -> svc.token.v1.ListAccountTokenRequest
	1,  // 12: svc.token.v1.TokenService.GenerateAccountToken:output_type -> svc.token.v1.GenerateAccountTokenResponse
	3,  // 13: svc.token.v1.TokenService.RevokeAccountToken:output_type -> svc.token.v1.RevokeAccountTokenResponse
	5,  // 14: svc.token.v1.TokenService.GetAccountToken:output_type -> svc.token.v1.GetAccountTokenResponse
	7,  // 15: svc.token.v1.TokenService.ListAccountToken:output_type -> svc.token.v1.ListAccountTokenResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_svc_token_v1_service_proto_init() }
func file_svc_token_v1_service_proto_init() {
	if File_svc_token_v1_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svc_token_v1_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_token_v1_service_proto_goTypes,
		DependencyIndexes: file_svc_token_v1_service_proto_depIdxs,
		MessageInfos:      file_svc_token_v1_service_proto_msgTypes,
	}.Build()
	File_svc_token_v1_service_proto = out.File
	file_svc_token_v1_service_proto_rawDesc = nil
	file_svc_token_v1_service_proto_goTypes = nil
	file_svc_token_v1_service_proto_depIdxs = nil
}
